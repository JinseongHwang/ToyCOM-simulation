
; ### CODE FORMAT
; address(2B H):<tab>machine_code(1B H<sp>1B H)<tab>;<sp>comment

; Report #2

; ### Application Flow
; 1. 0400 주소가 main으로 주어졌으므로 분기한다.
; 2. R1(sum) = 0; R2(iterator) = 1; R3(max) = 10;
; 3. R1에 R2를 더해준다.
; 4. R2와 R3와 비교해서 같으면 7번으로 가고, 다르면 계속 진행한다.
; 5. R2 = R2 + 1을 수행한다.
; 6. 3번으로 무조건 분기한다.

; ### 1부터 10까지 더한 값을 R1에 저장 완료했음.

; 7. R2(front) = 1; R3(back) = 0; R4(max) = 9; R5(result) = 0; R6(tmp_iterator) = 0; R7(tmp_max) = 0;
; 8~. R2와 R3는 초기화 된 값부터 점진적으로 증가하며 R4값과 동일해질 때까지 0500 번지의 함수를 호출한다.
; 9~. 0500번지 함수는 곱셈 연산을 수행합니다. R6와 R7이 연산을 보조한다.

0000:	FE 83	; 10000 011 1111 1110	BR PC(400h) = PC + 3FEh (offset = 400h - 2h = 3FEh)

0400:	00 09	; 00001 001 0000 0000	LDI R1(sum) = 0
0402:	01 0A	; 00001 010 0000 0001	LDI R2(iterator) = 1
0404:	0A 0B	; 00001 011 0000 1010	LDI R3(max) = 10

0406:	28 29	; 00101 001 001 010 00	ADD R1 = R1 + R2
0408:	4C 38	; 00111 xxx 010 011 xx 	CMP SR = R2 - R3 (Z == 0: continue, Z == 1: break)
040A:	04 88	; 10001 000 0000 0100	BRNZ PC(410h) = PC + 4h (offset = 410h - 40Ch = 4h)
040C:	00 22	; 00100 010 xxx 000 00	INC R2 = R2 + 1
040E:	F6 87	; 10000 111 1111 0110	BR PC(406h) = PC - Ah (offset = 406h - 410h = -Ah)

0410:	01 0A	; 00001 010 0000 0001	LDI R2(front) = 1
0412:	00 0B	; 00001 011 0000 0000	LDI R3(back) = 0
0414:	09 0C	; 00001 100 0000 1001	LDI R4(max) = 9
0416:	00 0D	; 00001 101 0000 0000	LDI R5(result) = 0

0418:	00 0E	; 00001 110 0000 0000	LDI R6(tmp_iterator) = 0
041A:	00 0F	; 00001 111 0000 0000	LDI R7(tmp_max) = 0

041C:	50 38	; 00111 xxx 010 100 xx	CMP SR = R2 - R4
041E:	0A 88	; 10001	000 0000 1010	BRNZ PC(430h) = PC + 10h (offset = 430h - 420h = 10h)
0420:	00 22	; 00100 010 xxx 000 00	INC R2 = R2 + 1
0422:	00 0B	; 00001 011 0000 0000	LDI R3(back) = 0
0424:	70 38	; 00111 xxx 011 100 xx	CMP SR = R3 - R4
0426:	F4 8F	; 10001 111 1111 0100	BRNZ PC(41Ch) = PC - Ch (offset = 41Ch - 428h = -Ch)
0428:	00 23	; 00100 011 xxx 000 00	INC R3 = R3 + 1
042A:	D4 F8	; 11111 000 1101 0100	CALL PC(500h) = PC + D4h (offset = 500h - 42Ch = D4h)
; ### R2 * R3 의 결과값을 R5가 가지고 있는 구간입니다. 042C 주소에서 다음 연산을 위해 초기화됩니다. ###
042C:	00 0D	; 00001 101 0000 0000	LDI R5(result) = 0
042E:	F4 87	; 10000 111 1111 0100	BR PC(424h) = PC - Ch (offset = 424h - 430h = -Ch)

0430:	01 00	; 00000 xxx xxx xxx 01	HALT

0500:	64 17	; 00010 111 011 001 00	MV R7 = R3
0502:	00 0E	; 00001 110 0000 0000	LDI R6(tmp_iterator) = 0
0504:	DC 38	; 00111 xxx 110 111 xx	CMP SR = R6 - R7
0506:	06 88	; 10001 000 0000 0110	BRNZ PC(50Eh) = PC + 6h (offset = 50Eh - 508h = 6h)
0508:	00 26	; 00100 110 xxx 000 00	INC R6 = R6 + 1
050A:	A8 2D	; 00101 101 101 010 00	ADD R5 = R5 + R2
050C:	F6 87	; 10000 111 1111 0110	BR PC(504h) = PC - Ah (offset = 504h - 50Eh = -Ah)
050E:	00 48	; 01001 xxx xxxx xx 00	RET


; #########################################################################################
; ### Correct Answer
; 040A:	04 90	; 10010 000 0000 0100	BRZ PC(410h) = PC + 4h (offset = 410h - 40Ch = 4h)
; ... BRNZ가 사용된 모든 명령어

; ### ToyCOM 프로그램에서 다음과 같은 오류가 발생한다는 것을 확인함.
; - BRZ와 BRNZ가 서로 역할이 바뀐 것으로 추정됨.
; #########################################################################################